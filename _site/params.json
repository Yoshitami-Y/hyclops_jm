{"name":"HyClops JobMonitoring","tagline":"","body":"# 概要 {#about}\r\n\r\nHyClopsはZabbixの拡張ツールです。\r\nAmazon EC2やVMware vSphereの環境を統合的にZabbix上で管理することを実現します。\r\n\r\n我々の目標は、物理環境、プライベート仮想環境、パブリッククラウド環境を含めたハイブリッドな環境を統合して管理できるようにすることです。\r\nさらに、統合するだけでなく、可能な限り自動化、自律化を推進し、運用者が煩わしい作業を行うことなくサービス運用を実現できるよう取り組んでいます。\r\n\r\nその第1ステップとして、統合監視ツールであるZabbixを拡張し、ハイブリッド環境の監視や簡単な操作をZabbixから実現できるようにしました。\r\n現在対応している環境は、AWSおよびvSphereのみでありますが、必要に応じて追加できる仕組みを導入しています。\r\n\r\nHyClopsでは外部スクリプトやZabbix senderおよびメッセージキューイングシステムを活用しています。\r\n\r\nHyClopsの機能概要:\r\n\r\n- EC2インスタンスやvSphere仮想マシン情報をZabbixに自動登録\r\n- Zabbixエージェントレスでインスタンスの情報を自動監視(AWS APIおよびvSphere APIを利用)\r\n- Zabbixグローバルスクリプトを用いてインスタンスの起動/停止処理を実行\r\n- Zabbixダッシュボード拡張によるEC2インスタンス、vSphere仮想マシン情報の一覧表示\r\n- (オプション機能) [GateOne](https://github.com/liftoff/GateOne)-Zabbix連携によるZabbixダッシュボードからのSSHコンソール接続\r\n\r\n# リリースノート {#releases}\r\n\r\n<ul>\r\n  <li> 2013/12/12 ver.0.2.0\r\n    <ul>\r\n      <li> Zabbix 2.2への対応を実施</li>\r\n      <li> プラットフォームが取得できない(unknown)EC2インスタンスへのテンプレート割り当てロジック変更</li>\r\n      <li> ダッシュボードのvSphere情報表示パネルにインタフェース表示カラムを追加</li>\r\n    </ul>\r\n  </li>\r\n  <li> 2013/07/12 ver.0.1.0\r\n    <ul>\r\n      <li> Amazon EC2およびVMware vSphere ESXi管理への対応</li>\r\n      <li> インスタンス情報の自動登録対応</li>\r\n      <li> 複数インスタンスへの起動/停止/再起動コマンド実行対応</li>\r\n      <li> Webブラウザ上でのSSHコンソール接続対応</li>\r\n    </ul>\r\n  </li>\r\n</ul>\r\n \r\n# アーキテクチャ {#architecture}\r\n\r\n![architecture]({{ site.production_url }}/assets/images/HyClops_architecture.png)\r\n\r\nHyClopsは3つのコンポーネントで構成されています。\r\n\r\n## Zabbix Serverコンポーネント\r\n\r\nZabbix Serverコンポーネントの役割は以下の通りです。\r\n\r\n<ul>\r\n  <li> インスタンス情報にダイレクトにアクセスするため、オリジナルのZabbixダッシュボードを置き換え</li>\r\n  <li> 外部スクリプト機能を利用し、定期的に各環境の情報取得リクエストを送付</li>\r\n  <li> グローバルスクリプト機能を利用し、各環境のインスタンス操作実行リクエストを送付</li>\r\n</ul>\r\n\r\n## メッセージキューイング処理コンポーネント\r\n\r\nメッセージキューイング処理コンポーネントの役割は以下の通りです。\r\n\r\n- キューイングプロセスをTCPポートで待受 ( MQにはZeroMQを使用 ) (default 5555/TCP).\r\n- 定期的にキューからメッセージを取り出し、メッセージ内容に応じて処理(AWS APIやvSphere APIにアクセス)\r\n- Zabbix senderを利用してZabbixにデータを登録\r\n\r\n## GateOne Serverコンポーネント\r\n\r\nGateOne Serverコンポーネントの役割は以下の通りです。\r\n\r\n- 複数のSSHコンソール接続セッションをブラウザ上で管理\r\n- 複数の認証鍵情報を管理\r\n\r\n# インストール {#install}\r\n\r\n## 必要条件\r\n\r\nHyClopsの稼働にはサーバに以下をインストールする必要があります。\r\n\r\n- Zabbix (2.0以上) (zabbix senderも含む)\r\n- Python (2.6以上)\r\n- python-setuptools\r\n- ZeroMQ\r\n- ipmitool\r\n- GateOne (Web上でのSSHコンソール接続機能が必要な場合)\r\n\r\n以下、具体的な手順を示します。\r\n\r\n## Zabbix ServerおよびZabbix Agentのインストール\r\n\r\nZabbixのインストールについてはZabbix公式マニュアルを参照して下さい。\r\n[Zabbix official manual](https://www.zabbix.com/documentation/2.0/manual/installation)\r\n\r\nZabbix AgentはHyClopsおよびGateOneのプロセス稼働監視のために利用します。\r\n\r\n## 関連パッケージのインストール\r\n\r\nRHEL/CentOSの場合\r\n\r\n    Add ZeroMQ package repository (This is the process for CentOS6.)\r\n    $ sudo curl http://download.opensuse.org/repositories/home:/fengshuo:/zeromq/CentOS_CentOS-6/home:fengshuo:zeromq.repo > /etc/yum.repos.d/zeromq.repo\r\n    Install related package\r\n    $ sudo yum install gcc gcc-c++ zeromq zeromq-devel python-devel python-setuptools ipmitool\r\n\r\nUbuntuの場合\r\n\r\n    $ sudo apt-get install gcc g++ libzmq1 ipmitool python-dev python-setuptools\r\n\r\n## Pythonモジュールのインストール\r\n\r\n    $ sudo pip install apache-libcloud==0.13.2 zabbix-api pyzmq psphere python-daemon==1.6 configobj\r\n    Pythonのバージョンが2.7未満の場合ordereddictおよびargparseもインストール\r\n    $ sudo pip install ordereddict argparse\r\n    AWSの課金情報監視を実施したい場合botoもインストール\r\n    $ sudo pip install boto\r\n\r\n## GateOneのインストール (オプション機能)\r\n\r\nGateOneの基本的なインストール手順はGateOne公式マニュアルを参照して下さい。\r\n[GateOne official manual](http://liftoff.github.io/GateOne/About/index.html)\r\n\r\nGateOneの初期設定(API認証設定含む)\r\n\r\n    $ sudo /opt/gateone/gateone.py --auth=api --origins=\"http://zabbix-server-frontend/\"\r\n    $ sudo /opt/gateone/gateone.py --new_api_key\r\n    $ sudo service gateone start\r\n\r\nRHEL/CentOSの場合\r\n\r\n    $ sudo chkconfig gateone on\r\n\r\nUbuntuの場合\r\n\r\n    $ sudo update-rc.d gateone defaults\r\n\r\n## HyClopsのインストール\r\n\r\n    $ wget https://github.com/tech-sketch/hyclops/archive/[version no.].tar.gz\r\n    $ tar zxvf hyclops-[version no.].tar.gz\r\n    $ cd hyclops-[version no.]\r\n    $ sudo python setup.py install\r\n\r\n### 起動スクリプト、外部チェックスクリプトの配置\r\n\r\n    $ sudo cp -a ./misc/init.d/redhat/hyclops /etc/init.d/  # in case of SysV init\r\n    $ sudo cp -a ./misc/init.d/ubuntu/hyclops.conf /etc/init/   # in case of Upstart\r\n    $ sudo cp -a ./externalscripts/* [externalscripts dir] (/etc/zabbix/externalscripts/ etc...)\r\n\r\n### 権限設定\r\n\r\n    $ sudo chown zabbix:zabbix [externalscripts dir](/etc/zabbix/externalscripts/ etc...)/*\r\n    $ sudo chmod u+x [externalscripts dir](/etc/zabbix/externalscripts/ etc...)/*\r\n\r\n### HyClopsの設定\r\n\r\n    $ sudo vim /opt/hyclops/hyclops.conf\r\n    [hyclops]\r\n    # listen_address = *          # listen on all network interface\r\n    # listen_address = 127.0.0.1  # listen on specific network interface\r\n    listen_address = 127.0.0.1  # HyClopsのリッスンIPアドレス指定(default 127.0.0.1)\r\n    listen_port = 5555  # HyClopsのリッスンポート指定 (default 5555)\r\n    [zabbix]\r\n    zabbix_server = 127.0.0.1  # Zabbix serverのIPアドレス/ホスト名指定\r\n    zabbix_port = 10051  # Zabbix serverのリッスンポート指定\r\n    frontend_url = http://%(zabbix_server)s/zabbix  # Zabbix server フロントエンドURL指定\r\n    zabbix_user = Admin   # Zabbixログインユーザ名 (host.create API実行権限のあるユーザ)\r\n    zabbix_password = zabbix   # Zabbixログインユーザパスワード\r\n    zabbix_sender = /usr/bin/zabbix_sender   # zabbix_senderのパス指定\r\n    \r\n    [ipmi]\r\n    ipmitool = /usr/bin/ipmitool   # ipmitoolコマンドのパス指定\r\n    \r\n    [logging]\r\n    log_level = WARNING   # HyClopsのログレベル指定\r\n    log_file = /tmp/hyclops.log  # HyClopsのログ出力先指定\r\n    \r\n    [environments]\r\n    # http_proxy = http://proxy.example.com:8080/  # http_proxy環境変数設定\r\n    # https_proxy = http://proxy.example.com:8080/  # https_proxy環境変数設定\r\n    # no_proxy = \"localhost,127.0.0.1\"  # no_proxy環境変数設定\r\n\r\n### SELinux設定(SELinuxを有効化している場合)\r\n\r\nHyClops関連のログはデフォルトで/opt/hyclops/logs/hyclops_server.logに出力されます。\r\nこのログはHyClopsプロセスから発するログ及び、Zabbixグローバルスクリプト実行時にも発するログが書きこまれます。\r\nHyClopsプロセスから発するログはHyClops起動ユーザ(hyclops)が、Zabbixグローバルスクリプト実行時のログはApacheの起動ユーザが書き込みを行います。\r\nそこで両ユーザから書込みができるようSELinuxの設定を実施します。\r\n\r\n    $ sudo chcon -R -t public_content_rw_t /opt/hyclops/logs/\r\n    $ sudo chcon -R -t public_content_rw_t /tmp/suds/ # vSphere操作時に一時出力されるファイルも同様\r\n    $ sudo setsebool -P allow_httpd_anon_write 1\r\n\r\n### サーバ起動設定\r\n\r\nSysV initを利用する環境の場合\r\n\r\n    $ sudo chkconfig hyclops on\r\n    $ sudo service hyclops start\r\n\r\nUpstartを利用する環境の場合\r\n\r\n    $ sudo initctl start hyclops\r\n\r\n## Zabbixのダッシュボード画面関連ファイルの置換\r\n\r\n    $ sudo python setup.py replace -d (zabbix frontend document root path) --zabbix-version=(2.0 or 2.2)\r\n\r\n## Zabbix templates,scripts,globalmacroデータのインポート\r\n\r\n以下の3つのファイルのインポートが必要です。\r\n\r\n- misc/import_data/templates.xml\r\n- misc/import_data/globalscripts.xml\r\n- misc/import_data/globalmacros.xml\r\n\r\nインポート処理を自動で実施するスクリプトを提供しています。\r\n\r\n    $ sudo python setup.py import -f <zabbix frontend url> -u <zabbix username> -p <zabbix password>\r\n    (例: python setup.py import -f http://localhost/zabbix -u Admin -p zabbix)\r\n\r\n## cronスクリプトの設定\r\n\r\nHyClopsは、AWS上やvSphere ESXi上から存在しなくなった仮想マシン用Zabbixホストを自動的に「Not exist hosts」ホストグループに移動します。\r\nこの移動された存在しないホスト情報を一定期間経過後に自動削除するためのcronスクリプトを登録します。\r\n\r\n    $ sudo crontab -u hyclops -e\r\n    */5 * * * * python /opt/hyclops/cron_scripts/delete_not_exist_hosts.py\r\n\r\nデフォルトでは存在しなくなってから30日経過後に自動削除するよう設定されています。\r\n変更したい場合には、delete_not_exist_hosts.pyの実行オプションとして「-d 経過日数」を指定して実行するようにします。\r\n(例えば、10日後に削除したい場合は「-d 10」と設定します。)\r\n\r\n# 設定 {#configure}\r\n\r\nZabbix管理画面からHyClopsの利用に必要な設定を実施します。\r\n\r\n## 値のマッピング設定\r\n\r\n\"管理 > 一般 > 値のマッピング\"から以下の2つの設定を行います。\r\n\r\n**Script return code**\r\n\r\n|受信データ|マッピング文字列|\r\n|---------|----------------|\r\n|0|success|\r\n|1|failure|\r\n\r\n**Libcloud Node State**\r\n\r\n|受信データ|マッピング文字列|\r\n|---------|----------------|\r\n|0|running|\r\n|1|rebooting|\r\n|2|terminated|\r\n|3|pending|\r\n|4|stopped|\r\n\r\n## グローバルマクロ設定\r\n\r\n|マクロ|値|\r\n|:---|:---|\r\n|{$GATEONE_URL}|GateOneサーバURL (例: https://gateone-server)|\r\n|{$GATEONE_KEY}|GateOne APIキー|\r\n|{$GATEONE_SECRET}|GateOne シークレットキー|\r\n|{$HYCLOPS_SERVER}|HyClopsのリッスンIPアドレス/ホスト名(例: 127.0.0.1)|\r\n|{$HYCLOPS_PORT}|HyClopsのリッスンポート (例: 5555)|\r\n\r\n(GateOneのAPIキーおよびシークレットキーは/opt/gateone/server.confに記載されています。)\r\n\r\n## Zabbixのホスト登録\r\n\r\n**AWS環境監視用ホスト**\r\n\r\n<table>\r\n<tr>\r\n  <th>設定項目</th>\r\n  <th colspan=\"2\">設定値</th>\r\n</tr>\r\n<tr>\r\n  <td>テンプレート名</td>\r\n  <td colspan=\"2\">AWSAccount</td>\r\n</tr>\r\n<tr>\r\n  <td rowspan=\"5\">マクロ</td>\r\n  <td>(Required) {$KEY}</td>\r\n  <td>AWSアクセスキー</td>\r\n</tr>\r\n<tr>\r\n  <td>(Required) {$SECRET}</td>\r\n  <td>AWSシークレットキー</td>\r\n</tr>\r\n<tr>\r\n  <td>(Optional) {$VM_TEMPLATES}</td>\r\n  <td>全インスタンスに共通で割り当てたいテンプレート名(カンマ区切りで複数指定可)</td>\r\n</tr>\r\n<tr>\r\n  <td>(Optional) {$VM_TEMPLATES_WINDOWS}</td>\r\n  <td>Windowsインスタンスに共通で割り当てたいテンプレート名(カンマ区切りで複数指定可)</td>\r\n</tr>\r\n<tr>\r\n  <td>(Optional) {$VM_TEMPLATES_LINUX}</td>\r\n  <td>Windows以外のインスタンスに共通で割り当てたいテンプレート名(カンマ区切りで複数指定可)</td>\r\n</tr>\r\n</table>\r\n\r\n**vSphere ESXi環境監視用ホスト**\r\n\r\n<table>\r\n<tr>\r\n  <th>設定項目</th>\r\n  <th colspan=\"2\">設定値</th>\r\n</tr>\r\n<tr>\r\n  <td>テンプレート名</td>\r\n  <td colspan=\"2\">vSphereESXi</td>\r\n</tr>\r\n<tr>\r\n  <td>SNMPインタフェース</td>\r\n  <td colspan=\"2\">vSphere ESXi管理インタフェース情報を登録</td>\r\n</tr>\r\n<tr>\r\n  <td rowspan=\"5\">マクロ</td>\r\n  <td>(Required) {$KEY}</td>\r\n  <td>ESXi管理ユーザ名</td>\r\n</tr>\r\n<tr>\r\n  <td>(Required) {$SECRET}</td>\r\n  <td>ESXi管理ユーザパスワード</td>\r\n</tr>\r\n<tr>\r\n  <td>(Optional) {$VM_TEMPLATES}</td>\r\n  <td>全VMに共通で割り当てたいテンプレート名(カンマ区切りで複数指定可)</td>\r\n</tr>\r\n<tr>\r\n  <td>(Optional) {$VM_TEMPLATES_WINDOWS}</td>\r\n  <td>WindowsVMに共通で割り当てたいテンプレート名(カンマ区切りで複数指定可)</td>\r\n</tr>\r\n<tr>\r\n  <td>(Optional) {$VM_TEMPLATES_LINUX}</td>\r\n  <td>Windows以外のVMに共通で割り当てたいテンプレート名(カンマ区切りで複数指定可)</td>\r\n</tr>\r\n</table>\r\n\r\n**物理マシン環境監視用ホスト**\r\n\r\n|設定項目|設定値|\r\n|---|---|\r\n|テンプレート名|IPMI|\r\n|IPMIインタフェース|IPMIインタフェース情報を登録|\r\n|IPMI設定|IPMI監視設定と同様の設定を実施|\r\n\r\n**HyClopsプロセス稼働サーバ、GateOneプロセス稼働サーバ用ホスト**\r\n\r\n必要に応じて、HyClopsプロセスやGateOneプロセスが稼働するサーバ用のホストを登録します。\r\n登録したホストにプロセス監視及びログ監視設定を含んだテンプレート(「HyClops Server」、「GateOne Server」)を割当てます。\r\n全てZabbix Serverと同じサーバ上で稼働している場合はZabbix Server監視用ホストに対して上記のテンプレートを割当てます。\r\n\r\n# 利用方法 {#usage}\r\n\r\n## 各環境の監視\r\n\r\nZabbixダッシュボードにアクセスするとオリジナルのZabbixに加えて3つのエリアが追加されています。\r\n(vSphere status, Amazon Web Services status,Pysical Machine status).\r\n\r\n![dashboard]({{ site.production_url }}/assets/images/HyClops_dashboard.png)\r\n\r\nこの追加エリアは各環境の情報を提示します。\r\n例えばAWSの場合、稼働中・停止中のそれぞれのインスタンス数を表示し、マウスオーバーすることでインスタンスリストが表示されます。\r\nさらに、インスタンス名をマウスオーバーするとより詳細な情報を確認することが可能となります。\r\n\r\n## 操作(起動/停止/再起動)\r\n\r\nZabbixダッシュボードから各環境のインスタンスに対して操作を実施することができます。\r\n\r\n1. 操作したい対象インスタンスのチェックボックスをオンにします(複数インスタンスの選択可)\r\n2. 実行処理をプルダウンメニューから選択\r\n3. 実行\r\n\r\n## SSHコンソール接続\r\n\r\nZabbixダッシュボードからvSphere VMまたはAmazon EC2インスタンス(稼働中の場合のみ)に対してSSHコンソール接続を行います。\r\n\r\n![ssh_connect]({{ site.production_url }}/assets/images/ssh_connect.png)\r\n\r\n![gateone]({{ site.production_url }}/assets/images/gateone.png)\r\n\r\n# 問い合わせ先 {#contact}\r\n\r\nフィードバックや不明点等以下までお問い合わせ下さい。\r\n\r\n[TIS株式会社](http://www.tis.co.jp)  \r\nコーポレート本部　戦略技術センター  \r\nHyClops for Zabbix 担当宛  \r\n<hyclops@ml.tis.co.jp>\r\n\r\n\r\n# ライセンス {#license}\r\n\r\nHyClops for ZabbixはGNU General Public License version2のもとにリリースされています。  \r\nGPLの全文は [こちら](http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt) からご覧頂くことが可能です。\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}